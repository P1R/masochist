#!/bin/bash
#
# Prevent careless amends of already-indexed content.

warning() {
  echo "warning [pre-commit]: $@"
}

error() {
  echo "error [pre-commit]: $@"
}

INSTALLED_HOOK="$(git rev-parse --git-common-dir)/hooks/pre-commit"
MAIN_WORKTREE_INFO=$(git worktree list --porcelain | head -1)
MAIN_WORKTREE_HOOK="${MAIN_WORKTREE_INFO/#worktree /}/hooks/pre-commit"
HOOK_FINGERPRINT=$(shasum -a 512 "$INSTALLED_HOOK" | awk '{ print $1 }')
REPO_FINGERPRINT=$(shasum -a 512 "$MAIN_WORKTREE_HOOK" | awk '{ print $1 }')

if [ "$HOOK_FINGERPRINT" != "$REPO_FINGERPRINT" ]; then
  error "installed hook does not match repo copy"
  error "freshen with scripts/set-up-hooks or use --no-verify to force"
  exit 1
fi

if [ "$(git symbolic-ref HEAD)" != refs/heads/content ]; then
  # Only run on "content" branch.
  exit 0
fi

# Read null-delimited output using this trick:
# http://stackoverflow.com/a/8677566/2103996
MISSING_TAGS=0
while IFS= read -r -d '' CHANGE; do
  TYPE=$(basename $(dirname "$CHANGE"))
  if ! egrep --quiet "^tags: .*\b$TYPE\b.*$" "$CHANGE"; then
    MISSING_TAGS=1
    error "file $CHANGE is missing \"tags: $TYPE\" metadata"
  fi
done < <(git diff --cached --diff-filter=AM --name-only -z HEAD -- content ':!content/images')

if [ $MISSING_TAGS -eq 1 ]; then
  error "use --no-verify to force, or re-run 'scripts/tag-by-type'"
  exit 1
fi

if [ -z "$PPID" ]; then
  warning "unable to get \$PPID"
  exit 0
fi

GIT_COMMAND=$(ps -ocommand= -p $PPID)
if [ -z "$GIT_COMMAND" ]; then
  warning "unable to get \$PPID"
  exit 0
fi

if [ "${GIT_COMMAND#*--amend}" == "$GIT_COMMAND" ]; then
  # Not an amend commit; nothing to do.
  exit 0
fi

LAST_INDEX=last-indexed-hash
PREFIX=masochist
CACHE_BREAKER=$(grep REDIS_CACHE_VERSION $PWD/../masochist/src/server/constants.js | perl -pe "s/.+'(\d+)'.*/\\1/")

if [ -z "$CACHE_BREAKER" ]; then
  warning "unable to get cache breaker"
  exit 0
fi

ALLOW_AMEND=1
HEAD=$(git rev-parse HEAD)
LAST_INDEXED_HASH=$(redis-cli get "$PREFIX:$CACHE_BREAKER:$LAST_INDEX")

if [ -z "$LAST_INDEXED_HASH" ]; then
  warning "unable to get last indexed hash"
else
  if [ "$LAST_INDEXED_HASH" = "$HEAD" ]; then
    error "attempting amend of commit that has already been indexed locally"
    ALLOW_AMEND=0
  elif git merge-base --is-ancestor $LAST_INDEXED_HASH $HEAD; then
    true # All good!
  else
    error "attempting amend of commit that has already been indexed locally"
    ALLOW_AMEND=0
  fi
fi

LATEST_TAG=$(git tag -l --sort=-version:refname | head -n 1)

if [ -z "$LATEST_TAG" ]; then
  warning "unable to get latest tag"
else
  LATEST_TAG_HASH=$(git rev-parse "$LATEST_TAG")
  if [ "$LATEST_TAG_HASH" = "$HEAD" ]; then
    error "attempting amend of commit that has already been indexed remotely"
    ALLOW_AMEND=0
  elif git merge-base --is-ancestor $LATEST_TAG_HASH $HEAD; then
    true # All good!
  else
    error "attempting amend of commit that has already been indexed remotely"
    ALLOW_AMEND=0
  fi
fi

if [ $ALLOW_AMEND -ne 1 ]; then
  error "use --no-verify to force"
  exit 1
fi
